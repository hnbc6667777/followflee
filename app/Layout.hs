{-# LANGUAGE OverloadedStrings #-}

module Layout
    ( layout
    , cssStyles
    , javascriptCode
    , Html
    ) where

import qualified Data.Text.Lazy as T
import qualified Data.Text as TS
import Data.Maybe (fromMaybe)
import Models
import qualified Text.Blaze.Html5 as H
import qualified Text.Blaze.Html5.Attributes as A
import Text.Blaze.Html.Renderer.Text (renderHtml)
import Text.Blaze.Html5 ((!), toHtml, docTypeHtml)
import Text.Blaze.Html5.Attributes (href)

type Html = H.Html

-- 布局模板
layout :: T.Text -> Html -> T.Text
layout title content = renderHtml $ docTypeHtml $ do
    H.html ! A.lang "zh-CN" $ do
        H.head $ do
            H.meta ! A.charset "UTF-8"
            H.meta ! A.name "viewport" ! A.content "width=device-width, initial-scale=1.0"
            H.title $ toHtml (title <> " - FollowFlee")
            H.style $ toHtml cssStyles
        H.body $ do
            H.div ! A.class_ "header" $ do
                H.div ! A.class_ "container" $ do
                    H.h1 "FollowFlee - 小说阅读平台"
            H.div ! A.class_ "nav" $ do
                H.div ! A.class_ "container" $ do
                    H.a ! A.href "/" $ "首页"
                    H.a ! A.href "/novels" $ "小说列表"
                    H.a ! A.href "/bookshelf" $ "我的书架"
                    H.a ! A.href "/about" $ "关于"
                    H.form ! A.class_ "search-form" ! A.action "/search" ! A.method "get" $ do
                        H.input ! A.type_ "text" ! A.name "q" ! A.placeholder "搜索小说..." ! A.class_ "search-input"
                        H.button ! A.type_ "submit" ! A.class_ "search-button" $ "搜索"
            H.div ! A.class_ "main" $ do
                H.div ! A.class_ "container" $ content
            H.div ! A.class_ "footer" $ do
                H.div ! A.class_ "container" $ do
                    H.p "© 2024 FollowFlee. All rights reserved."
            H.script $ toHtml javascriptCode

cssStyles :: T.Text
cssStyles = T.unlines
    [ "* { margin: 0; padding: 0; box-sizing: border-box; }"
    , "body { font-family: 'Microsoft YaHei', sans-serif; line-height: 1.6; color: #333; background-color: #f5f5f5; }"
    , ".container { max-width: 1200px; margin: 0 auto; padding: 0 20px; }"
    , ".header { background: #2c3e50; color: white; padding: 1rem 0; }"
    , ".header h1 { font-size: 2rem; margin-bottom: 0.5rem; }"
    , ".nav { background: #34495e; padding: 0.5rem 0; }"
    , ".nav a { color: white; text-decoration: none; margin-right: 1rem; padding: 0.5rem 1rem; border-radius: 3px; transition: background 0.3s; }"
    , ".nav a:hover { background: #2c3e50; }"
    , ".main { padding: 2rem 0; }"
    , ".footer { background: #34495e; color: white; text-align: center; padding: 1rem 0; margin-top: 2rem; }"
    , ".novel-grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); gap: 2rem; margin-top: 2rem; }"
    , ".novel-card { background: white; border-radius: 8px; padding: 1.5rem; box-shadow: 0 2px 10px rgba(0,0,0,0.1); transition: transform 0.3s; }"
    , ".novel-card:hover { transform: translateY(-5px); }"
    , ".novel-title { font-size: 1.5rem; color: #2c3e50; margin-bottom: 0.5rem; }"
    , ".novel-author { color: #7f8c8d; margin-bottom: 1rem; }"
    , ".novel-description { color: #555; line-height: 1.6; }"
    , ".btn { display: inline-block; background: #3498db; color: white; padding: 0.5rem 1rem; text-decoration: none; border-radius: 4px; border: none; cursor: pointer; transition: background 0.3s; }"
    , ".btn:hover { background: #2980b9; }"
    , ".btn-secondary { background: #95a5a6; }"
    , ".btn-secondary:hover { background: #7f8c8d; }"
    , ".btn-success { background: #27ae60; }"
    , ".btn-success:hover { background: #229954; }"
    , ".form-group { margin-bottom: 1rem; }"
    , ".form-label { display: block; margin-bottom: 0.5rem; font-weight: bold; }"
    , ".form-input { width: 100%; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px; font-size: 1rem; }"
    , ".chapter-content { background: white; padding: 2rem; border-radius: 8px; line-height: 1.8; font-size: 1.1rem; }"
    , ".chapter-nav { display: flex; justify-content: space-between; margin-top: 2rem; }"
    , ".font-controls { position: fixed; top: 100px; right: 20px; background: white; padding: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); z-index: 1000; display: block; }"
    , ".font-controls button { margin: 0 2px; padding: 5px 10px; border: 1px solid #ddd; background: #f8f9fa; cursor: pointer; border-radius: 3px; }"
    , ".font-controls button.active { background: #3498db; color: white; border-color: #3498db; }"
    , ".text-color-controls { position: fixed; top: 160px; right: 20px; background: white; padding: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); z-index: 1000; display: block; }"
    , ".text-color-controls button { margin: 0 2px; padding: 5px 10px; border: 1px solid #ddd; cursor: pointer; border-radius: 3px; }"
    , ".text-color-controls button.active { border: 2px solid #3498db; }"
    , ".background-controls { position: fixed; top: 220px; right: 20px; background: white; padding: 10px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); z-index: 1000; display: block; }"
    , ".background-controls button { margin: 0 2px; padding: 5px 10px; border: 1px solid #ddd; cursor: pointer; border-radius: 3px; }"
    , ".background-controls button.active { border: 2px solid #3498db; }"
    , ".font-small { font-size: 14px; }"
    , ".font-medium { font-size: 16px; }"
    , ".font-large { font-size: 18px; }"
    , ".font-xlarge { font-size: 20px; }"
    , ".text-black { color: #000000; }"
    , ".text-dark-gray { color: #333333; }"
    , ".text-gray { color: #666666; }"
    , ".text-brown { color: #8B4513; }"
    , ".text-dark-blue { color: #000080; }"
    , ".alert { padding: 1rem; border-radius: 4px; margin-bottom: 1rem; }"
    , ".alert-success { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; }"
    , ".alert-error { background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }"
    , ".search-form { display: flex; margin: 1rem 0; }"
    , ".search-input { flex: 1; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px 0 0 4px; font-size: 1rem; }"
    , ".search-button { padding: 0.5rem 1rem; background: #3498db; color: white; border: none; border-radius: 0 4px 4px 0; cursor: pointer; }"
    , ".search-button:hover { background: #2980b9; }"
    , ".search-results { margin-top: 2rem; }"
    , ".result-count { color: #7f8c8d; margin-bottom: 1rem; }"
    , ".no-results { text-align: center; color: #7f8c8d; font-size: 1.2rem; margin: 2rem 0; }"
    , ".page-title { color: #2c3e50; margin-bottom: 1rem; }"
    ]

javascriptCode :: T.Text
javascriptCode = T.unlines
    [ "function changeFontSize(size) {"
    , "    const content = document.getElementById('chapter-content');"
    , "    if (content) {"
    , "        content.className = 'chapter-content font-' + size;"
    , "        localStorage.setItem('fontSize', size);"
    , "        // 更新按钮激活状态"
    , "        document.querySelectorAll('.font-controls button').forEach(btn => {"
    , "            btn.classList.remove('active');"
    , "        });"
    , "        event.target.classList.add('active');"
    , "    }"
    , "}"
    , ""
    , "function toggleFontControls() {"
    , "    const panel = document.getElementById('font-controls-panel');"
    , "    const toggleBtn = document.getElementById('toggle-font-controls');"
    , "    if (panel && toggleBtn) {"
    , "        if (panel.style.display === 'none') {"
    , "            panel.style.display = 'block';"
    , "            toggleBtn.textContent = '隐藏字体设置';"
    , "            localStorage.setItem('fontControlsVisible', 'true');"
    , "        } else {"
    , "            panel.style.display = 'none';"
    , "            toggleBtn.textContent = '字体设置';"
    , "            localStorage.setItem('fontControlsVisible', 'false');"
    , "        }"
    , "    }"
    , "}"
    , ""
    , "function changeBackgroundColor(color) {"
    , "    const content = document.getElementById('chapter-content');"
    , "    if (content) {"
    , "        content.style.backgroundColor = color;"
    , "        localStorage.setItem('backgroundColor', color);"
    , "        // 更新按钮激活状态"
    , "        document.querySelectorAll('.background-controls button').forEach(btn => {"
    , "            btn.classList.remove('active');"
    , "        });"
    , "        event.target.classList.add('active');"
    , "    }"
    , "}"
    , ""
    , "function changeCustomBackgroundColor(color) {"
    , "    const content = document.getElementById('chapter-content');"
    , "    if (content) {"
    , "        content.style.backgroundColor = color;"
    , "        localStorage.setItem('backgroundColor', color);"
    , "        // 移除所有按钮的激活状态"
    , "        document.querySelectorAll('.background-controls button').forEach(btn => {"
    , "            btn.classList.remove('active');"
    , "        });"
    , "    }"
    , "}"
    , ""
    , "function changeTextColor(color) {"
    , "    const content = document.getElementById('chapter-content');"
    , "    if (content) {"
    , "        // 移除所有文字颜色类"
    , "        content.classList.remove('text-black', 'text-dark-gray', 'text-gray', 'text-brown', 'text-dark-blue');"
    , "        // 添加新的文字颜色类"
    , "        content.classList.add('text-' + color);"
    , "        localStorage.setItem('textColor', color);"
    , "        localStorage.setItem('isCustomTextColor', 'false');"
    , "        // 更新按钮激活状态"
    , "        document.querySelectorAll('.text-color-controls button').forEach(btn => {"
    , "            btn.classList.remove('active');"
    , "        });"
    , "        event.target.classList.add('active');"
    , "    }"
    , "}"
    , ""
    , "function changeCustomTextColor(color) {"
    , "    const content = document.getElementById('chapter-content');"
    , "    if (content) {"
    , "        // 移除所有文字颜色类"
    , "        content.classList.remove('text-black', 'text-dark-gray', 'text-gray', 'text-brown', 'text-dark-blue');"
    , "        // 设置自定义颜色"
    , "        content.style.color = color;"
    , "        localStorage.setItem('textColor', color);"
    , "        localStorage.setItem('isCustomTextColor', 'true');"
    , "        // 移除所有按钮的激活状态"
    , "        document.querySelectorAll('.text-color-controls button').forEach(btn => {"
    , "            btn.classList.remove('active');"
    , "        });"
    , "    }"
    , "}"
    , ""
    , "function toggleTextColorControls() {"
    , "    const panel = document.getElementById('text-color-controls-panel');"
    , "    const toggleBtn = document.getElementById('toggle-text-color-controls');"
    , "    if (panel && toggleBtn) {"
    , "        if (panel.style.display === 'none') {"
    , "            panel.style.display = 'block';"
    , "            toggleBtn.textContent = '隐藏文字颜色';"
    , "            localStorage.setItem('textColorControlsVisible', 'true');"
    , "        } else {"
    , "            panel.style.display = 'none';"
    , "            toggleBtn.textContent = '文字颜色';"
    , "            localStorage.setItem('textColorControlsVisible', 'false');"
    , "        }"
    , "    }"
    , "}"
    , ""
    , "function toggleBackgroundControls() {"
    , "    const panel = document.getElementById('background-controls-panel');"
    , "    const toggleBtn = document.getElementById('toggle-background-controls');"
    , "    if (panel && toggleBtn) {"
    , "        if (panel.style.display === 'none') {"
    , "            panel.style.display = 'block';"
    , "            toggleBtn.textContent = '隐藏背景设置';"
    , "            localStorage.setItem('backgroundControlsVisible', 'true');"
    , "        } else {"
    , "            panel.style.display = 'none';"
    , "            toggleBtn.textContent = '背景设置';"
    , "            localStorage.setItem('backgroundControlsVisible', 'false');"
    , "        }"
    , "    }"
    , "}"
    , ""
    , "function initFontSize() {"
    , "    const content = document.getElementById('chapter-content');"
    , "    if (content) {"
    , "        const savedSize = localStorage.getItem('fontSize') || 'medium';"
    , "        content.className = 'chapter-content font-' + savedSize;"
    , "        // 设置按钮激活状态"
    , "        document.querySelectorAll('.font-controls button').forEach(btn => {"
    , "            if (btn.textContent.includes(savedSize.charAt(0).toUpperCase() + savedSize.slice(1))) {"
    , "                btn.classList.add('active');"
    , "            }"
    , "        });"
    , "        "
    , "        // 初始化背景颜色"
    , "        const savedColor = localStorage.getItem('backgroundColor') || 'white';"
    , "        content.style.backgroundColor = savedColor;"
    , "        // 设置背景按钮激活状态"
    , "        document.querySelectorAll('.background-controls button').forEach(btn => {"
    , "            if (btn.textContent === '白色' && savedColor === 'white') {"
    , "                btn.classList.add('active');"
    , "            } else if (btn.textContent === '米色' && savedColor === '#f5f5dc') {"
    , "                btn.classList.add('active');"
    , "            } else if (btn.textContent === '浅蓝' && savedColor === '#e8f4f8') {"
    , "                btn.classList.add('active');"
    , "            } else if (btn.textContent === '浅绿' && savedColor === '#f0f8f0') {"
    , "                btn.classList.add('active');"
    , "            }"
    , "        });"
    , "        "
    , "        // 初始化文字颜色"
    , "        const savedTextColor = localStorage.getItem('textColor') || 'black';"
    , "        const isCustomTextColor = localStorage.getItem('isCustomTextColor') === 'true';"
    , "        if (isCustomTextColor) {"
    , "            content.style.color = savedTextColor;"
    , "        } else {"
    , "            // 移除所有文字颜色类"
    , "            content.classList.remove('text-black', 'text-dark-gray', 'text-gray', 'text-brown', 'text-dark-blue');"
    , "            // 添加新的文字颜色类"
    , "            content.classList.add('text-' + savedTextColor);"
    , "            // 设置文字颜色按钮激活状态"
    , "            document.querySelectorAll('.text-color-controls button').forEach(btn => {"
    , "                if (btn.textContent === '黑色' && savedTextColor === 'black') {"
    , "                    btn.classList.add('active');"
    , "                } else if (btn.textContent === '深灰' && savedTextColor === 'dark-gray') {"
    , "                    btn.classList.add('active');"
    , "                } else if (btn.textContent === '灰色' && savedTextColor === 'gray') {"
    , "                    btn.classList.add('active');"
    , "                } else if (btn.textContent === '棕色' && savedTextColor === 'brown') {"
    , "                    btn.classList.add('active');"
    , "                } else if (btn.textContent === '深蓝' && savedTextColor === 'dark-blue') {"
    , "                    btn.classList.add('active');"
    , "                }"
    , "            });"
    , "        }"
    , "    }"
    , "    // 初始化字体控制面板显示状态"
    , "    const fontPanel = document.getElementById('font-controls-panel');"
    , "    const fontToggleBtn = document.getElementById('toggle-font-controls');"
    , "    if (fontPanel && fontToggleBtn) {"
    , "        const isFontVisible = localStorage.getItem('fontControlsVisible') !== 'false';"
    , "        if (!isFontVisible) {"
    , "            fontPanel.style.display = 'none';"
    , "            fontToggleBtn.textContent = '字体设置';"
    , "        } else {"
    , "            fontToggleBtn.textContent = '隐藏字体设置';"
    , "        }"
    , "    }"
    , "    "
    , "    // 初始化文字颜色控制面板显示状态"
    , "    const textColorPanel = document.getElementById('text-color-controls-panel');"
    , "    const textColorToggleBtn = document.getElementById('toggle-text-color-controls');"
    , "    if (textColorPanel && textColorToggleBtn) {"
    , "        const isTextColorVisible = localStorage.getItem('textColorControlsVisible') !== 'false';"
    , "        if (!isTextColorVisible) {"
    , "            textColorPanel.style.display = 'none';"
    , "            textColorToggleBtn.textContent = '文字颜色';"
    , "        } else {"
    , "            textColorToggleBtn.textContent = '隐藏文字颜色';"
    , "        }"
    , "    }"
    , "    "
    , "    // 初始化背景控制面板显示状态"
    , "    const bgPanel = document.getElementById('background-controls-panel');"
    , "    const bgToggleBtn = document.getElementById('toggle-background-controls');"
    , "    if (bgPanel && bgToggleBtn) {"
    , "        const isBgVisible = localStorage.getItem('backgroundControlsVisible') !== 'false';"
    , "        if (!isBgVisible) {"
    , "            bgPanel.style.display = 'none';"
    , "            bgToggleBtn.textContent = '背景设置';"
    , "        } else {"
    , "            bgToggleBtn.textContent = '隐藏背景设置';"
    , "        }"
    , "    }"
    , "}"
    , ""
    , "document.addEventListener('DOMContentLoaded', initFontSize);"
    ]